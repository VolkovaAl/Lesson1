---
- name: configure webserver without tls
  hosts: test
  gather_facts: true
  become: true
  vars:
    - nginx_port_no_tls: 443
    - key_size: 4096
    - passphrase: 
    - key_type: RSA 
    - country_name: KE
    - email_address: admin@srv
    - organization_name: srv
  tasks:
    - name: Generate an OpenSSL private key
      openssl_privatekey:
        path: "/etc/ssl/{{ ansible_host }}_privkey.pem"
        size: "{{ key_size }}"
        type: "{{ key_type }}"
        backup: yes

    - name: Generate an OpenSSL Certificate Signing Request with Subject information
      openssl_csr:
        path: "/etc/ssl/{{ ansible_host }}.csr"
        privatekey_path: "/etc/ssl/{{ ansible_host }}_privkey.pem"
        country_name: "{{ country_name }}"
        organization_name: "{{ organization_name }}"
        email_address: "{{ email_address }}"
        common_name: "{{ ansible_host }}"

    - name: Generate a Self Signed OpenSSL certificate
      openssl_certificate:
        path: "/etc/ssl/{{ ansible_host }}_cert.pem"
        privatekey_path: "/etc/ssl/{{ ansible_host }}_privkey.pem"
        csr_path: "/etc/ssl/{{ ansible_host }}.csr"
        provider: selfsigned

    - name: create nginx repo definition
      copy:
        src: nginx.repo
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: 0644

    - name: install nginx
      yum:
        name: nginx
        update_cache: true
        state: present

    - name: copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy site's nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/notls.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true

    - name: insert firewalld rule for nginx
      firewalld:
        port: "{{ nginx_port_no_tls }}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true

  post_tasks:
    - name: check web site from control server
      uri:
        url: "https://{{ ansible_host }}:{{ nginx_port_no_tls }}"
        validate_certs: false
        return_content: true
      connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
